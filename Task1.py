""" Даны значения величины заработной платы заемщиков банка (zp) 
и значения их поведенческого кредитного скоринга (ks):
zp = [35, 45, 190, 200, 40, 70, 54, 150, 120, 110],
ks = [401, 574, 874, 919, 459, 739, 653, 902, 746, 832].
Найдите ковариацию этих двух величин с помощью элементарных действий,
а затем с помощью функции cov из numpy
Полученные значения должны быть равны.
Найдите коэффициент корреляции Пирсона с помощью ковариации и среднеквадратичных
отклонений двух признаков, а затем с использованием функций из библиотек numpy и pandas."""


import numpy as np

zp = np.array([35, 45, 190, 200, 40, 70, 54, 150, 120, 110])
ks = np.array([401, 574, 874, 919, 459, 739, 653, 902, 746, 832])

# Расчет средних значений
zp_mean = np.mean(zp)
ks_mean = np.mean(ks)

# Расчет ковариации
cov_manual = np.sum((zp - zp_mean) * (ks - ks_mean)) / (len(zp) - 1)
print("Ковариация (элементарные действия):", round(cov_manual, 4))

# Расчет среднеквадратичных отклонений
zp_std = np.std(zp, ddof=1)  # Параметр ddof=1 для расчета по выборке
ks_std = np.std(ks, ddof=1)

# Расчет коэффициента корреляции Пирсона
corr_manual = cov_manual / (zp_std * ks_std)
print("Коэффициент корреляции Пирсона (элементарные действия):", round(corr_manual, 4))

print("-------------------------------------------")

cov_np = np.cov(zp, ks, ddof=1)[0, 1]
print("Ковариация (numpy):", round(cov_np, 4))

corr_np = np.corrcoef(zp, ks)[0, 1]
print("Коэффициент корреляции Пирсона (numpy):", round(corr_np, 4))

"""
вывод
Ковариация (элементарные действия): 10175.3778
Коэффициент корреляции Пирсона (элементарные действия): 0.8875
-------------------------------------------
Ковариация (numpy): 10175.3778
Коэффициент корреляции Пирсона (numpy): 0.8875
"""